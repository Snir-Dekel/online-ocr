<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>online-ocr</title>
    <link rel="shortcut icon" href="{{ url_for('static', filename='favicon.png') }}">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<style>
        body {
            background-color: rgb(33, 37, 41);
            color: white;
            font-family: Arial, serif;
        }

        * {
            box-sizing: border-box;
        }

        .wrapper {
            border-radius: 0.5rem;
            display: inline-flex;
            height: 100px;
            width: 400px;
            justify-content: space-evenly;
            padding: 20px 15px;
            box-shadow: 5px 5px 30px rgba(0, 0, 0, 0.4);
        }

        .wrapper .option {
            height: 100%;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
            margin: 0 10px;
            border-radius: 5px;
            cursor: pointer;
            padding: 0 10px;
            border: 2px solid lightgrey;
            transition: all 0.3s ease;
        }

        .dot {
            height: 20px;
            width: 20px;
            background: #d9d9d9;
            border-radius: 50%;
            position: relative;
        }

        .dot::before {
            position: absolute;
            content: "";
            top: 4px;
            left: 4px;
            width: 12px;
            height: 12px;
            background: #0069d9;
            border-radius: 50%;
            opacity: 0;
            transform: scale(1.5);
            transition: all 0.3s ease;
        }

        input[type="radio"] {
            display: none;
        }

        #option-1:checked ~ .option-1,
        #option-2:checked ~ .option-2, #option-3:checked ~ .option-3 {
            border-color: #0069d9;
            background: #0069d9;
        }

        #option-1:checked ~ .option-1 .dot,
        #option-2:checked ~ .option-2 .dot, #option-3:checked ~ .option-3 .dot {
            background: #fff;
        }

        #option-1:checked ~ .option-1 .dot::before,
        #option-2:checked ~ .option-2 .dot::before, #option-3:checked ~ .option-3 .dot::before {
            opacity: 1;
            transform: scale(1);
        }

        #option-1:checked ~ .option-1 span,
        #option-2:checked ~ .option-2 span, #option-3:checked ~ .option-3 span {
            color: #fff;
        }

        .option span {
            font-size: 20px;
            color: #808080;
        }

        .dot {
            margin-right: 0.4rem;
        }


        img {
            display: block;
            max-width: 100%;
            max-height: 50vh;
        }

        .cropper-modal {
            opacity: 0.4;
        }


        .spinner:before {
            content: "";
            box-sizing: border-box;
            position: absolute;
            top: 50%;
            left: 50%;
            width: 60px;
            height: 60px;
            margin-top: -30px;
            margin-left: -30px;
            border-radius: 50%;
            border: 6px solid lightgray;
            border-top-color: #004bff;
            animation: spinner 1s linear infinite;
        }

        @keyframes spinner {
            to {
                transform: rotate(360deg);
            }
        }

    </style>
</head>
<body>

<form action="/ocr" method="post" enctype="multipart/form-data">
    <h1 style="text-align: center;font-size:3rem;color:#094fff">Paste your image here (Ctrl+V)</h1>
    <input name="image" style="display: none" id="base_64_text">


    <div ondblclick="create_cropper()" style="max-height: 800px;position: relative">
        <img style="display: block;margin: 0 auto 1rem;max-width:100%" id="pasted_image" alt="pasted_image">
        <div id="spinner_div" style="position: absolute;top: 50%;left: 50%;"></div>
    </div>


    <img style="display: none;" id="original_image">


    <div style="text-align: center;margin-top: 2rem;">
        <div class="wrapper">
            <input type="radio" name="language" value="eng" id="option-1" checked>
            <input type="radio" name="language" value="heb" id="option-2">
            <input type="radio" name="language" value="ara" id="option-3">


            <label for="option-1" class="option option-1">
                <div class="dot"></div>
                <span>English</span>
            </label>
            <label for="option-2" class="option option-2">
                <div class="dot"></div>
                <span>Hebrew</span>
            </label>
            <label for="option-3" class="option option-3">
                <div class="dot"></div>
                <span>Arabic</span>
            </label>
        </div>

    </div>


    <h2 id="generated_text" spellcheck="false" contenteditable style="text-align: center;font-size: 2rem;width: fit-content;margin: 0.9rem auto;display: block;padding:0.5rem;outline-width: 0;"></h2>
    <h2 id="copy_text_h2"
        onclick="navigator.clipboard.writeText(document.getElementById('generated_text').innerText);this.innerHTML='Your text copied to clipboard (Press Ctrl+V)';this.style.cursor = 'auto'"
        style="cursor: pointer;margin: auto;width: fit-content;color: cyan;display: none;">Click here to copy the text</h2>
    <h2 id="translate_text_h2" onclick="translate_text()" style="cursor: pointer;margin: auto;width: fit-content;color: cyan;margin-top: 1rem;display: none;text-align: center">Click here to translate
        the text</h2>
</form>
<script>
    function translate_text() {
        let text_to_translate = document.getElementById('generated_text').innerText


        fetch("/translate", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(text_to_translate),
        })
            .then(response => response.json())
            .then(data => {
                    document.querySelector("#translate_text_h2").innerText = data["translation"]
                    document.querySelector("#translate_text_h2").style.cursor = 'auto'
                    document.querySelector("#translate_text_h2").setAttribute("onclick", "")
                }
            );
    }

    const image = document.getElementById('pasted_image');

    let cropper = new Cropper(image);

    window.onfocus = on_window_load
    window.load = on_window_load

    window.addEventListener("paste", function (e) {
        retrieveImageFromClipboardAsBase64(e, function (imageDataBase64) {
            if (imageDataBase64) {
                on_image_paste(imageDataBase64)
            }
        });
    }, false);


    let previous_base64data

    function on_window_load() {
        navigator.clipboard.read().then((data) => {
            for (let i = 0; i < data.length; i++) {
                if (data[i].types.includes("image/png")) {
                    data[i].getType("image/png").then((blob) => {
                        let reader = new FileReader();
                        reader.readAsDataURL(blob);
                        reader.onloadend = function () {
                            let base64data = reader.result;
                            if (base64data === previous_base64data) {
                                return
                            }
                            on_image_paste(base64data)
                            document.getElementById("pasted_image").src = base64data
                            previous_base64data = base64data
                        }
                    });
                }
            }
        });
    }



    
    
    function on_image_paste(imageDataBase64) {
        console.log(imageDataBase64)
        cropper.destroy()
        if (typeof imageDataBase64 !== 'undefined') {
            document.getElementById("original_image").src = imageDataBase64
            document.getElementById("base_64_text").value = imageDataBase64
        }
        document.getElementById("generated_text").style.display = "none"
        document.getElementById("pasted_image").style.opacity = "0.6"
        document.getElementById("spinner_div").classList.add("spinner")

        let xhr = new XMLHttpRequest();
        xhr.onload = function () {
            try {


                let json_response = JSON.parse(xhr.response)
                document.getElementById("generated_text").innerText = json_response["image_text"]
                document.getElementById("pasted_image").src = "data:image/jpeg;base64, " + json_response["base_64_image"]
                document.getElementById("generated_text").style.display = "block"
                document.getElementById("copy_text_h2").style.display = "block"
                document.getElementById("translate_text_h2").style.display = "block"
                document.getElementById("copy_text_h2").innerHTML = 'Click here to copy the text';
                document.getElementById("copy_text_h2").style.cursor = 'pointer'

                document.querySelector("#translate_text_h2").innerText = "Click here to translate the text"
                document.querySelector("#translate_text_h2").style.cursor = 'pointer'
                document.querySelector("#translate_text_h2").setAttribute("onclick", "translate_text()")

                document.getElementById("pasted_image").style.opacity = "1"
                document.getElementById("spinner_div").classList.remove("spinner")



                $(".imageSection button").click(function () {
                    $(".imageSection img").removeClass("activeImage");
                    $(this).parent().find("img").addClass("activeImage");
                });
                $(".imageSection:eq(0) img").addClass("activeImage");

                {#document.getElementById("canvas").style.display = "block"#}
                create_cropper()

            } catch (e) {
                console.log("error:", e)
                document.getElementById("generated_text").innerText = xhr.response
                document.getElementById("generated_text").style.display = "block"
                document.getElementById("copy_text_h2").style.display = "none"
                document.getElementById("translate_text_h2").style.display = "none"
            }


        }
        let form_element = document.getElementsByTagName("form")[0]
        xhr.open(form_element.method, form_element.action, true);
        xhr.send(new FormData(form_element));
        {#document.getElementsByTagName("form")[0].submit()#}

    }

    function create_cropper() {

        cropper.destroy()

        cropper = new Cropper(image, {
            autoCrop: false,
            viewMode: 1,
            minCropBoxWidth: 10,
            minCropBoxHeight: 10,
            autoCropArea: 1,
            //zoomable: false,
            //zoomOnWheel: false,
            guides: false,
            center: false,
            // crop(event) {
            //  console.log(event.detail.x + "|" + event.detail.y + "|" +
            //      event.detail.width + "|" + event.detail.height)
            //},
            ready() {
                // document.querySelector(".cropper-hide").src = document.querySelector("#original_image").src
                document.querySelector("span.cropper-view-box > img").src = document.querySelector("#original_image").src
            },

            cropstart() {
                document.querySelector(".cropper-crop-box").style.display = "block"
                console.log("crop start")
            },
            cropend() {
                console.log("crop end", cropper.getData([true]).x, cropper.getData([true]).y, cropper.getData([true]).width, cropper.getData([true]).height)
                fetch("/crop", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        language: document.querySelector("body > form").language.value,
                        base64_image: document.getElementById("original_image").src,
                        x: cropper.getData([true]).x,
                        y: cropper.getData([true]).y,
                        width: cropper.getData([true]).width,
                        height: cropper.getData([true]).height
                    }),
                })
                    .then(response => response.json())
                    .then(data => {


                            console.log(data["image_text"])
                            document.querySelector("#generated_text").innerText = data["image_text"]

                            document.getElementById("copy_text_h2").innerHTML = 'Click here to copy the text';
                            document.getElementById("copy_text_h2").style.cursor = 'pointer'
                            document.querySelector("#translate_text_h2").innerText = "Click here to translate the text"
                            document.querySelector("#translate_text_h2").style.cursor = 'pointer'
                            document.querySelector("#translate_text_h2").setAttribute("onclick", "translate_text()")

                        }
                    );
            },
        });

    }


    function retrieveImageFromClipboardAsBase64(pasteEvent, callback, imageFormat) {
        if (pasteEvent.clipboardData === false) {
            if (typeof (callback) == "function") {
                callback(undefined);
            }
        }

        const items = pasteEvent.clipboardData.items;

        if (items === undefined) {
            if (typeof (callback) == "function") {
                callback(undefined);
            }
        }
        for (let i = 0; i < items.length; i++) {
            if (items[i].type.indexOf("image") === -1) continue;
            const blob = items[i].getAsFile();

            const mycanvas = document.createElement("canvas");
            const ctx = mycanvas.getContext('2d');

            const img = new Image();

            img.onload = function () {
                mycanvas.width = this.width;
                mycanvas.height = this.height;

                ctx.drawImage(img, 0, 0);

                if (typeof (callback) == "function") {
                    callback(mycanvas.toDataURL(
                        (imageFormat || "image/png")
                    ));
                }
            };

            const URLObj = window.URL || window.webkitURL;

            img.src = URLObj.createObjectURL(blob);
            document.getElementById("pasted_image").src = URLObj.createObjectURL(blob);
        }
    }

    let language = "eng"
    let radio_buttons = document.querySelectorAll("input[type='radio']")
    radio_buttons.forEach(radio_button => radio_button.addEventListener("click", (e) => {
        if (e.target.value !== language) {
            if (document.querySelector("#base_64_text").value !== "") {
                on_image_paste();
            }
        }

        language = document.querySelector("body > form").language.value;

    }));

</script>
<h3 style="padding: 5rem;
    margin: auto;
    color: darkorange;
    font-size: 1.5rem;
    max-width: 65rem;">Instructions: copy any image with text inside to your clipboard and the website will extract the text inside. Made by <a href="https://github.com/Snir-Dekel" target="_blank"
                                                                                                                                                style="color: #2160ff">Snir Dekel</a> with cropperjs,
    python,
    tesseractOCR (Optical
    Character Recognition) and flask to handle http requests.</h3>
</body>
</html>
